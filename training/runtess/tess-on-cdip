#!/bin/bash

# set -e

basedir=$(pwd)

cd $basedir

if test "$prep" != ""; then
cat <<EOF |
FROM ubuntu:18.04
RUN apt-get update && apt-get install -y software-properties-common && add-apt-repository -y ppa:alex-p/tesseract-ocr
RUN apt-get update && apt-get install -y tesseract-ocr-all 
RUN mkdir /work
WORKDIR /work
EOF
docker build -t tess -

cat > run-tess <<\EOF
#!/bin/bash
docker run -v $(pwd):/work -w /work -t tess tesseract "$@"
EOF

chmod 755 run-tess

sudo apt-get install -y dtrx rename graphicsmagick libtiff5-dev parallel imagemagick
fi

gsutil ls gs://lpr-cdip/ | sed '/image/!d;s/.*images.//;s/.cpio$//' |
while read vol; do
    echo === $vol
    result=cdip_$vol
    test -f images.$vol.cpio || {
        gsutil cp gs://lpr-cdip/images.$vol.cpio images.$vol.cpio
    }
    cp images.$vol.cpio volume.cpio
    rm -rf volume outputs $result $result.tgz
    dtrx --one rename volume.cpio
    echo "num_tiff $(find volume -name '*.tif' | wc -l)"
    rm -rf outputs
    mkdir outputs
    # find volume -name '*.tif' | sed 10q | parallel convert {} outputs/{/.}-%04d.png
    find volume -name '*.tif' | parallel gm convert {} +adjoin outputs/{/.}-%04d.png
    echo "num_png $(find outputs -name '*.png' | wc -l)"
    # break
    cd $basedir/outputs
    # --oem 0 (original), 1 (lstm), 2 (both), 3 (auto default)
    ls *.png | parallel --joblog ../LOG -j 4 ../run-tess --oem 1 {} {.} -l eng hocr 
    cd $basedir
    test -d outputs
    mv outputs $result
    tar --sort=name -zcf $result.tgz $result
    gsutil cp $result.tgz gs://lpr-cdip-tess/$result.tgz
    # break
    rm -rf volume outputs $result $result.tgz
done
