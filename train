#!/bin/bash

set -e

export OMP_NUM_THREADS=1

image=ocropus4
remimage=tmbdev/ocropus4

die() {
    echo "ERROR: $*"
    exit 1
}

activate() {
    source venv/bin/activate
}


test -d ./uw3 || die "must download 'uw3' directory with 'run' command first"

cmd_bin() {
    activate
    python3 -m ocrlib.ocrobin train uw3/uw3-binsim-{000..002}.tar --replicate=1 --num-workers=0 "$@" # --show 100
}


cmd_rot() {
    activate
    python3 -m ocrlib.ocrorot train-rot uw3/uw3-lineseg-markers.tar --replicate=16 --num-workers=16
}


cmd_skew() {
    activate
    python3 -m ocrlib.ocrorot train-skew uw3/uw3-lineseg-markers.tar --replicate=16 --num-workers=16
}

cmd_scale() {
    activate
    python3 -m ocrlib.ocrorot train-scale uw3/uw3-lineseg-markers.tar --replicate=16 --num-workers=16
}


cmd_help() { # help message
echo
echo available commands:
echo
grep '^cmd_[_0-9a-z]*() {' $0 | sed 's/cmd_//;s/\(.*\)() *{* *#* */\1 -- /'
}

cmd=${1:-help}
shift
case $cmd in
help)
    echo; echo available commands:; echo
    grep '^cmd_[_0-9a-z]*() {' "$0" | sed 's/cmd_//;s/\(.*\)() *{* *#* */\1 -- /'
    ;;
*.py)
    # cmd_versions
    set -e
    # hg status grep -v '^M ' > /dev/null
    cmd_venv > venv.log
    source venv/bin/activate
    export OMP_NUM_THREADS=1
    python3 "$cmd" "$@"
    ;;
*)
    set -e
    "cmd_$cmd" "$@"
    ;;
esac

